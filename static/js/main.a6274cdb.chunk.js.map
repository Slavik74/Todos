{"version":3,"sources":["model/todoModel.js","utils.js","components/NewTask/NewTask.js","components/TaskCard/TaskCard.js","components/TasksStatus/TasksStatus.js","components/Tasks/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["TodoModel","name","this","id","replace","c","r","Math","random","toString","complete","NewTask","handleNewTask","className","type","placeholder","onKeyDown","event","key","target","value","TaskCard","task","handleDeleteTask","handleChangeStatus","useState","checked","setChecked","useEffect","FormCheck","defaultChecked","onChange","label","onClick","window","confirm","TasksStatus","tasksList","showAll","showCompleted","showOpen","reduce","total","Button","variant","Tasks","todosList","setTodosList","filter","setFilter","filteredList","todos","length","Container","concat","TasksList","map","index","Alert","showTasks","taskId","slice","array","findIndex","obj","splice","status","x","App","Row","Col","md","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6274cdb.chunk.js","sourcesContent":["import uuidv4 from '../utils.js'\r\nexport default class TodoModel {\r\n    constructor(name) {\r\n        this.id = uuidv4();\r\n        this.name = name;\r\n        this.complete = false;\r\n    }\r\n}","export default function uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n      var r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n      return v.toString(16);\r\n    });\r\n  }","import React from 'react'\r\nimport TodoModel from '../../model/todoModel';\r\nimport './NewTask.css'\r\n\r\nexport default function NewTask({handleNewTask}) {\r\n\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            handleNewTask(new TodoModel(event.target.value))\r\n            event.target.value=\"\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-task\">\r\n            <input type=\"text\"className=\"new-task-input\" placeholder=\"What's next?\" onKeyDown={handleKeyDown} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport './TaskCard.css';\r\nimport {FormCheck } from 'react-bootstrap';\r\n\r\nexport default function TaskCard({task, handleDeleteTask, handleChangeStatus}) {\r\n\r\n    const [checked, setChecked] = useState(task.complete)\r\n\r\n    useEffect(() => {\r\n        setChecked(task.complete)\r\n    }, [task.complete])\r\n\r\n    const handleCheck= ()=>{\r\n        handleChangeStatus(task, !checked)        \r\n        setChecked(!checked);\r\n    }\r\n\r\n    const confirmDelete = () => {\r\n        if (window.confirm('Are you sure you want to delete this task?')) {\r\n            handleDeleteTask(task.id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"task\">\r\n                <FormCheck defaultChecked={checked} onChange={handleCheck} label={task.name} />\r\n            </div>\r\n            <div className=\"task__remove-icon\" onClick={confirmDelete}>X</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport './TasksStatus.css'\r\n\r\nfunction TasksStatus({tasksList, showAll, showCompleted, showOpen}) {\r\n\r\n    return (\r\n        <div className=\"c-tasks-status\">\r\n            <label>{tasksList.reduce((total, task) => !task.complete + total,0) + ' items left'}</label>\r\n            <div className=\"buttons-box\">\r\n                <Button variant=\"dark\" onClick={()=>showAll()}>All</Button>&nbsp;\r\n                <Button variant=\"dark\" onClick={()=>showOpen()}>Active</Button>&nbsp;\r\n                <Button variant=\"dark\" onClick={()=>showCompleted()}>Completed</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasksStatus\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Alert, Container} from 'react-bootstrap';\r\nimport NewTask from '../NewTask/NewTask';\r\nimport TaskCard from './../TaskCard/TaskCard';\r\nimport './Tasks.css'\r\nimport TasksStatus from './../TasksStatus/TasksStatus';\r\n\r\nexport default function Tasks() {\r\n\r\n    const [todosList, setTodosList] = useState([])\r\n    const [filter, setFilter] = useState(0)\r\n\r\n    const handleNewTask = (task)=>{\r\n        setTodosList(todosList.concat([task]))    \r\n    }\r\n  \r\n    const handleDeleteTask = (taskId) => {\r\n        setTodosList(todosList.slice())\r\n        var array = [...todosList]; // make a separate copy of the array\r\n        const index = array.findIndex(obj => obj.id === taskId);\r\n        if (index !== -1) {\r\n            array.splice(index, 1);\r\n            setTodosList(array);\r\n        }\r\n    }\r\n\r\n    const showCompleted = () => {\r\n        setFilter(1)\r\n    }\r\n\r\n    const showAll = () => {\r\n        setFilter(0)\r\n    }\r\n\r\n    const showOpen = () => {\r\n        setFilter(2)\r\n    }\r\n  \r\n    const handleChangeStatus = (task, status) => {\r\n\r\n        var array = [...todosList];\r\n        const index = array.findIndex(x => x.id ===task.id);\r\n        if (index !== -1) {\r\n            array[index].complete = status;\r\n            setTodosList(array);\r\n        }\r\n\r\n    }\r\n\r\n    let filteredList = todosList  //All  tasks\r\n    let todos = filteredList.length > 0;\r\n    if(filter===1) //Completed tasks\r\n        filteredList = todosList.filter(task => task.complete)\r\n    else if(filter===2){ //Open tasks\r\n        filteredList = todosList.filter(task => !task.complete)\r\n        todos = filteredList.length > 0;\r\n    }\r\n\r\n    function showTasks(TasksList, handleDeleteTask, handleChangeStatus, todos){\r\n        if (todos){\r\n            return(\r\n                TasksList.map((task, index) =>\r\n                    <div key={index} className=\"list-group-item border-0\">\r\n                        <TaskCard key={task.id} task={task} \r\n                                    handleDeleteTask={handleDeleteTask} \r\n                                    handleChangeStatus={handleChangeStatus} />\r\n                    </div>\r\n                )\r\n            )\r\n        } else {\r\n            return (\r\n                <Alert variant=\"success\">\r\n                    No active tasks\r\n                </Alert>\r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n            <Container className=\"c-tasks\">\r\n                <header>\r\n                    <h1>Todos</h1>\r\n                    <NewTask handleNewTask={handleNewTask} />\r\n                </header>\r\n                <Container className=\"tasks-box\">\r\n                {   \r\n                    showTasks(filteredList,handleDeleteTask, handleChangeStatus, todos)\r\n                }                                       \r\n                </Container>\r\n                <footer>\r\n                    <TasksStatus tasksList={todosList} showAll={showAll} showCompleted={showCompleted} showOpen={showOpen} />\r\n                </footer>\r\n\r\n            </Container>\r\n\r\n    )\r\n}\r\n","import './App.css';\nimport Tasks from './components/Tasks/Tasks';\nimport { Col, Row, Container } from 'react-bootstrap';\n\nfunction App() {\n  return (\n    <Container className=\"App\">\n      <Row>\n        <Col md={6}>\n            <Tasks />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}